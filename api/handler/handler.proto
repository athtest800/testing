// Copyright Â© 2016 The Things Network
// Use of this source code is governed by the MIT license that can be found in the LICENSE file.

syntax = "proto3";

import "github.com/TheThingsNetwork/ttn/api/api.proto";
import "github.com/TheThingsNetwork/ttn/api/broker/broker.proto";
import "github.com/TheThingsNetwork/ttn/api/protocol/protocol.proto";

package handler;

message DeviceActivationResponse {
  bytes                        payload              = 1;
  string                       app_id               = 2;
  broker.DownlinkOption        downlink_option      = 11;
  protocol.ActivationMetadata  activation_metadata  = 23;
}

// The Handler service provides pure network functionality
service Handler {
  rpc Activate(broker.DeduplicatedDeviceActivationRequest) returns (DeviceActivationResponse);
}

// message StatusRequest is used to request the status of this Handler
message StatusRequest {}

// message Status is the response to the StatusRequest
message Status {}

message ApplicationIdentifier {
  string app_id      = 1;
}

message Application {
  string app_id      = 1;
  string decoder     = 2;
  string converter   = 3;
  string validator   = 4;
}

service ApplicationManager {
  rpc GetApplication(ApplicationIdentifier) returns (Application);
  rpc SetApplication(Application) returns (api.Ack);
  rpc DeleteApplication(ApplicationIdentifier) returns (api.Ack);
}

// The HandlerManager service provides configuration and monitoring
// functionality
service HandlerManager {
  rpc GetStatus(StatusRequest) returns (Status);
}
